apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      name: nginx
  template:
    metadata:
      name: nginx
      labels:
        name: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:1.23.1-alpine
          ports:
            - containerPort: 80
        - name: go-web
          image: vincen320/go-web
          ports:
            - containerPort: 3000 #berarti app golangnya run di port 3000

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  selector:
    name: nginx #HARUS SAMA DENGAN PODnya
  ports:
    - port: 8080 #PORT buat servicenya
      targetPort: 80 #PORT UNTUK AKSES PODNYA, jadi akses ke servicenya yaitu 8080 tapi nanti si service akan ngeakses ke port 80 di pod yang ditujunya(contohnya di nginx jalan di port 80 jadi diarahkan kesana)
      name: nginx
    - port: 3000 #PORT buat servicenya
      targetPort: 3000 #PORT UNTUK AKSES PODNYA, jadi akses ke servicenya yaitu 8080 tapi nanti si service akan ngeakses ke port 80 di pod yang ditujunya(contohnya di nginx jalan di port 80 jadi diarahkan kesana)
      name: go-web
#catatan targetPort lanjutan diatas: Ingat karena service seperti gerbang/gateway, jadi si service harus ngeakses suatu POD

---
apiVersion: v1
kind: Pod
metadata:
  name: curl
  labels:
    name: curl
spec:
  containers:
    - name: curl
      image: vincen320/nginx-curl
